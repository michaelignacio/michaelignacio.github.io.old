{"componentChunkName":"component---src-templates-blog-post-js","path":"/modern-wordpress-workflow-2019/","result":{"data":{"site":{"siteMetadata":{"title":"Michael Ignacio"}},"markdownRemark":{"id":"17cbe4f3-165b-5fac-bf28-1aec8a18a335","excerpt":"Today I want to explain my current Wordpress workflow in detail. I’m always on\nthe lookout on how to improve my development tools so there’s a chance that\nthis…","html":"<p>Today I want to explain my current Wordpress workflow in detail. I’m always on\nthe lookout on how to improve my development tools so there’s a chance that\nthis post might be inaccurate, but I’ll try to keep this post updated.</p>\n<h3>Local Wordpress Environment</h3>\n<p>I tried using <a href=\"https://varyingvagrantvagrants.org/\" target=\"_blank\">VVV\n</a> but found it too large-scale for my development purposes. Starting up Vagrant\ntakes too much time especially if you’re only booting up one Wordpress install.\nBut I think it’s perfect if you have several Wordpress installs in one Vagrant\nconfiguration.</p>\n<p>I found <a href=\"https://github.com/10up/wp-local-docker-v2\" target=\"_blank\">\nWP Local Docker</a> to be the smaller yet as efficient brother of VVV, since\nstarting up a Docker container using the <code class=\"language-text\">10updocker start</code> command is way\nfaster than <code class=\"language-text\">vagrant up</code>.</p>\n<p>For some reason one of my <code class=\"language-text\">10updocker</code> installs suddenly slowed down, so I had\nno choice but to find an alternative for the meantime. This is where I found\n<a href=\"https://localbyflywheel.com/\" target=\"_blank\">Local by Flywheel</a> to\nbe a worthy solution as it’s really fast and has a\nfriendly graphical UI - which is a plus for them (even though I’m more inclined\ntowards command-line interfaces).</p>\n<p><em>Fun fact:</em> <a href=\"https://varyingvagrantvagrants.org/\" target=\"_blank\">VVV</a>\n<em>and</em> <a href=\"https://github.com/10up/wp-local-docker-v2\" target=\"_blank\">\nWP Local Docker</a> <em>are projects that both started in the\ncompany</em> <a href=\"https://10up.com/\" target=\"_blank\">10up</a>, <em>so kudos to you\nguys!</em></p>\n<h3>NPM packages</h3>\n<p>Recently most of what I do requires building on our in-house Wordpress theme and\nplugins, and since our SASS files are handled by\n<a href=\"https://github.com/ConnectThink/WP-SCSS\" target=\"_blank\">WP-SCSS</a>\nfor easier client customizations, <a href=\"https://www.browsersync.io/\"\ntarget=\"_blank\"> Browsersync</a> is the package that I mostly use in Wordpress\ndevelopment.</p>\n<h3>Better option than page builders</h3>\n<p>We’ve stopped using page builders because a) major strides are being done in\n<a href=\"https://wordpress.org/gutenberg/\" target=\"_blank\">Gutenberg</a>,\nremoving the need for third-party page builders and b) most page builders are\nbloated in nature.</p>\n<p>We would’ve opted for Gutenberg if not for how it currently handles row and\ncolumn layouts, which is a limiting factor for us in delivering varying layouts\nto our Wordpress builds. But I’m sure they will address this pretty soon, so\nuntil then…</p>\n<p>We’ve chosen <a href=\"https://www.advancedcustomfields.com/\" target=\"_blank\">\nAdvanced Custom Fields</a> because of its sheer power to customize\nWordpress to your needs. It also allowed us to create re-usable templates that\nwe can build on and track with version control - something that doesn’t feel\nnatural with page builders like Visual Composer.</p>\n<h3>Syncing databases</h3>\n<p>This has always been the issue in having a modern Wordpress workflow - how\ndo you handle database changes? Our solution for this is\n<a href=\"https://deliciousbrains.com/wp-migrate-db-pro/\" target=\"_blank\">\nWP Migrate DB Pro</a>. It allows us to sync changes from local to production,\nand vice versa. There’s also a free alternative - <a target=\"_blank\" href=\"\nhttps://github.com/wp-sync-db/wp-sync-db\">WP Sync DB</a> - and there’s something\nweird going on between them as this free and paid solutions look a lot alike,\nbut I’ll let you figure that out yourself.</p>\n<h3>Conclusion</h3>\n<p>I’m pretty sure there are other better workflows out there as far as Wordpress\nis concerned, but for my usage, this workflow allows me to focus on translating\nwireframes into actual code, without my tooling or configurations getting in my\nway.</p>","frontmatter":{"title":"Modern Wordpress Workflow","date":"July 23, 2019","description":"My 2019 Wordpress workflow- how I initialize, develop, and deploy."}}},"pageContext":{"slug":"/modern-wordpress-workflow-2019/","previous":{"fields":{"slug":"/fund-management-platform/"},"frontmatter":{"title":"Fund Management Platform"}},"next":{"fields":{"slug":"/top-songs-spotify-react/"},"frontmatter":{"title":"Your Top Songs in Spotify"}}}}}